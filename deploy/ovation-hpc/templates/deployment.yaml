apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        env: {{ .Release.Namespace }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/pre-install-secret.yaml") . | sha256sum }}
        checksum/service: {{ include (print $.Template.BasePath "/pre-install-service-key-secret.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: google-cloud-key
          secret:
            secretName: {{ .Release.Name }}-service-key-secret
        - name: ssh-key
          secret:
            secretName: {{ .Release.Name }}-ssh-key-secret
        - name: vpn-settings
          secret:
            secretName: {{ .Release.Name }}-vpn-settings-secret
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/bin/startup.sh"]
          args: ["/var/secrets/vpn/ovation.ovpn"]
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.service.internalPort }}
              initialDelaySeconds: 20
              periodSeconds: 15
              timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.service.internalPort }}
          volumeMounts:
            - name: google-cloud-key
              mountPath: /var/secrets/google
            - name: ssh-key
              mountPath: /var/secrets/ssh
            - name: vpn-settings
              mountPath: /var/secrets/vpn
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
            - name:
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
